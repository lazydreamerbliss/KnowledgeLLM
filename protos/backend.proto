syntax = "proto3";
option cc_generic_services = true;

import "obj_basic.proto";
import "obj_shared.proto";

// Server APIs
service GrpcServer
{
    // Heartbeat API
    rpc heartbeat(VoidObj) returns(BooleanObj) {}

    // Task APIs
    rpc get_task_state(StringObj) returns(TaskInfoObj) {}
    rpc is_task_done(StringObj) returns(BooleanObj) {}
    rpc is_task_successful(StringObj) returns(BooleanObj) {}
    rpc cancel_task(StringObj) returns(BooleanObj) {}

    // Library manager APIs for library control
    rpc create_library(LibInfoObj) returns(BooleanObj) {}
    rpc use_library(StringObj) returns(BooleanObj) {}
    rpc demolish_library(VoidObj) returns(BooleanObj) {}

    rpc get_current_lib_info(VoidObj) returns(LibInfoObj) {}
    rpc get_library_list(VoidObj) returns(ListOfLibInfoObj) {}
    rpc get_library_path_list(VoidObj) returns(ListOfStringObj) {}
    rpc lib_exists(StringObj) returns(BooleanObj) {}

    rpc get_embedding_records(VoidObj) returns(ListOfEmbeddingRecordObj) {}

    // Document library APIs
    rpc make_document_ready(LibGetReadyParamObj) returns(StringObj) {}
    rpc query_text(DocLibQueryObj) returns(ListOfDocLibQueryResponseObj) {}

    // Image library APIs
    rpc scan(LibGetReadyParamObj) returns(StringObj) {}
    rpc incremental_scan(VoidObj) returns(StringObj) {}
    rpc image_for_image_search(ImageLibQueryObj) returns(ListOfImageLibQueryResponseObj) {}
    rpc text_for_image_search(ImageLibQueryObj) returns(ListOfImageLibQueryResponseObj) {}
    rpc get_image_tags(ImageLibQueryObj) returns(ListOfImageTagObj) {}

    // File/folder APIs
    rpc move_files(FileMoveParamObj) returns(BooleanObj) {}
    rpc rename_file(FileRenameParamObj) returns(BooleanObj) {}
    rpc delete_files(ListOfStringObj) returns(BooleanObj) {}
}
