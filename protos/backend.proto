syntax = "proto3";
option cc_generic_services = true;

import "obj_basic.proto";
import "obj_shared.proto";

// Server APIs
service GrpcServer
{
    // Task APIs
    rpc get_task_state (StringObj) returns (RpcTaskObj) {}
    rpc is_task_done (StringObj) returns (BooleanObj) {}
    rpc is_task_successful (StringObj) returns (BooleanObj) {}
    rpc cancel_task (StringObj) returns (BooleanObj) {}

    // Library manager APIs for library control
    rpc create_library (RpcLibInfoObj) returns (BooleanObj) {}
    rpc use_library (VoidObj) returns (BooleanObj) {}
    rpc demolish_library (RpcLibInfoObj) returns (BooleanObj) {}
    rpc make_library_ready (LibGetReadyParams) returns (StringObj) {}

    rpc get_current_lib_info (VoidObj) returns (RpcLibInfoObj) {}
    rpc get_library_list (VoidObj) returns (ListOfRpcLibInfoObj) {}
    rpc get_library_path_list (VoidObj) returns (ListOfStrings) {}
    rpc lib_exists (StringObj) returns (BooleanObj) {}

    // Document library APIs
    rpc query (DocLibQueryObj) returns (ListOfDocLibQueryResponse) {}

    // Image library APIs
    rpc image_for_image_search (ImageLibQueryObj) returns (ListOfImageLibQueryResponse) {}
    rpc text_for_image_search (ImageLibQueryObj) returns (ListOfImageLibQueryResponse) {}
    rpc get_image_tags (ImageLibQueryObj) returns (ListOfImageTagObj) {}

    // TODO: add manual incremental scan, file operation, etc.
    // ...
}
